{
  "_args": [
    [
      {
        "raw": "shape",
        "scope": null,
        "escapedName": "shape",
        "name": "shape",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Froggo\\Froggo"
    ]
  ],
  "_from": "shape@latest",
  "_id": "shape@0.0.1",
  "_inCache": true,
  "_location": "/shape",
  "_npmUser": {
    "name": "damonoehlman",
    "email": "damon.oehlman@gmail.com"
  },
  "_npmVersion": "1.3.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "shape",
    "scope": null,
    "escapedName": "shape",
    "name": "shape",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/shape/-/shape-0.0.1.tgz",
  "_shasum": "88105ee11c02f900a01a05e1cbcdb365465e4f4d",
  "_shrinkwrap": null,
  "_spec": "shape",
  "_where": "C:\\Froggo\\Froggo",
  "author": {
    "name": "Damon Oehlman",
    "email": "damon.oehlman@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/DamonOehlman/shape/issues"
  },
  "dependencies": {},
  "description": "Simple 2D shape generators",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "88105ee11c02f900a01a05e1cbcdb365465e4f4d",
    "tarball": "https://registry.npmjs.org/shape/-/shape-0.0.1.tgz"
  },
  "homepage": "https://github.com/DamonOehlman/shape#readme",
  "keywords": [
    "2d",
    "shape",
    "geometry",
    "canvas"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "damonoehlman",
      "email": "damon.oehlman@gmail.com"
    }
  ],
  "name": "shape",
  "optionalDependencies": {},
  "readme": "# shape\n\nA simple set of geometric shape generators, starting with the simple stuff.\n\n\n[![NPM](https://nodei.co/npm/shape.png)](https://nodei.co/npm/shape/)\n\n\n## Reference\n\n### poly\n\n```js\npoly(n, l, clamp?)\n```\n\nCreate a polygon starting and ending at [0, 0] with `n` sides of\nlength `l`.  Allows partial application (i.e. if `l` is not supplied a \nfunction accepting `l` and generating the poly will be returned).\n\nLike other functions in the shape toolbox, clamping defaults to true.\n\n```js\nvar poly = require('shape/poly');\n\n// generate a square\nconsole.log(poly(4, 100));\n// --> [ [ 0, 0 ], [ 0, 100 ], [ 100, 100 ], [ 100, 0 ], [ 0, 0 ] ]\n\n// generate a triangle\nconsole.log(poly(3, 100));\n// --> [ [ 0, 0 ], [ 0, 100 ], [ 86, 50 ], [ 0, 0 ] ]\n\n// generate a triangle with no clamping\nconsole.log(poly(3, 100, false));\n// --> [ [ 0, 0 ], [ 0, 100 ], [ 86.60254037844388, 50.00000000000002 ], [ 4.263256414560601e-14, -2.1316282072803006e-14 ] ]\n```\n\n### square\n\n```js\nsquare(size, clamp?)\n```\n\nFor those times you don't want to type poly(4) we do it for you.\n\n```js\nvar square = require('shape/square');\n\n// generate a square\nconsole.log(square(100));\n// --> [ [ 0, 0 ], [ 0, 100 ], [ 100, 100 ], [ 100, 0 ], [ 0, 0 ] ]\n\n// generate an unclamped square\nconsole.log(square(25.5, false));\n// --> [ [ 0, 0 ], [ 0, 25.5 ], [ 25.5, 25.5 ], [ 25.500000000000004, 0 ], [ 3.552713678800501e-15, -4.684119303370593e-15 ] ]\n```\n\n## License(s)\n\n### MIT\n\nCopyright (c) 2013 Damon Oehlman <damon.oehlman@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/DamonOehlman/shape.git"
  },
  "scripts": {
    "gendocs": "gendocs > README.md",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.0.1"
}
