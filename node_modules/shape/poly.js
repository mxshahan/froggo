/**
  ### poly

  ```js
  poly(n, l, clamp?)
  ```

  Create a polygon starting and ending at [0, 0] with `n` sides of
  length `l`.  Allows partial application (i.e. if `l` is not supplied a 
  function accepting `l` and generating the poly will be returned).

  Like other functions in the shape toolbox, clamping defaults to true.

  <<< examples/poly.js
**/

module.exports = function(n, l, c) {
  var theta = (Math.PI * 2) / n;
  var cos = Math.cos;
  var sin = Math.sin;

  function generate(len, clamp) {
    // generate the first side as that is always
    var last;
    var path = [ [0, 0], last = [ 0, len ] ];
    var current = theta;
    var index = 1;

    // default clamping to true
    clamp = typeof clamp == 'undefined' || clamp;

    while (index++ < n) {
      path[path.length] = last = [
        last[0] + len * sin(current),
        last[1] + len * cos(current)
      ];

      if (clamp) {
        last[0] |= 0;
        last[1] |= 0;
      }

      current += theta;
    }

    return path;
  }

  return typeof l == 'undefined' ? generate : generate(l, c);
};